<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kakarote.build.equipment.mapper.EquipmentMonitorDataMapper">

    <select id="selectByPage" resultType="java.util.Map">
        select p.point_name, p.point_code, p.monitor_type, p.equipment_id, p.unit, p.alarm_upper, p.alarm_lower,
        d.value, d.monitor_time, a.asset_name
        from b_equipment_monitor_data d
        left join b_equipment_monitor_point p on d.point_id = p.id
        left join b_equipment_assets a on p.equipment_id = a.asset_id
        <where>
            <if test="data.monitorType != null and data.monitorType != ''">
                and p.monitor_type = #{data.monitorType,jdbcType=VARCHAR}
            </if>
            <if test="data.pointName != null and data.pointName != ''">
                and p.point_name like concat('%', #{data.pointName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="data.startTime != null">
                and d.monitor_time >= #{data.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.endTime != null">
                and d.monitor_time &lt;= #{data.endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by d.monitor_time desc, p.sort
    </select>

    <insert id="batchSaveData">
        INSERT INTO b_equipment_monitor_data
        (point_id, value, monitor_time, create_time, create_user_id, tenant_id)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.pointId}, #{item.value}, #{item.monitorTime}, #{item.createTime}, #{item.createUserId},
            #{item.tenantId})
        </foreach>
    </insert>

    <select id="selectInfo" resultType="java.util.Map">
        select a.id,a.value,a.monitor_time,b.point_code,b.point_name,b.unit
        from b_equipment_monitor_data a
        left join b_equipment_monitor_point b on a.point_id = b.id
        where b.monitor_type = #{data.monitorType}
        <if test="data.statisticsType != null and data.statisticsType != ''">
            and b.statistical_type = #{data.statisticsType}
        </if>
        <if test="data.pointId != null and data.pointId != ''">
            and b.id = #{data.pointId}
        </if>
        <if test="data.startTime != null and data.startTime != ''">
            and <![CDATA[ a.monitor_time >= date_format(#{data.startTime},'%Y-%m-%d') ]]>
        </if>
        <if test="data.endTime != null and data.endTime != ''">
            and <![CDATA[ a.monitor_time <= date_format(#{data.endTime},'%Y-%m-%d %H:%M:%s') ]]>
        </if>
        order by a.monitor_time asc,a.create_time asc
    </select>

    <select id="selectAppListByPage" resultType="java.util.Map">
        select p.point_name, p.monitor_type, p.equipment_id, p.unit, p.alarm_upper,p.alarm_lower,d.value, d.monitor_time
        from (select c.* from (SELECT (@sn := @sn + 1) sn,a.* from b_equipment_monitor_data a,(select @sn:=0) b order by
        monitor_time desc)c
        GROUP BY point_id) d left join b_equipment_monitor_point p on d.point_id = p.id
        <where>
            <if test="data.monitorType != null and data.monitorType != ''">
                and p.monitor_type = #{data.monitorType,jdbcType=VARCHAR}
            </if>
            <if test="data.pointName != null and data.pointName != ''">
                and p.point_name like concat('%', #{data.pointName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="data.startTime != null">
                and d.monitor_time >= #{data.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.endTime != null">
                and d.monitor_time &lt;= #{data.endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.tenantId != null">
                and p.tenant_id = #{data.tenantId,jdbcType=INTEGER}
            </if>
            <if test="data.projectId != null">
                and p.project_id &lt;= #{data.projectId,jdbcType=INTEGER}
            </if>
        </where>
        order by p.sort
    </select>

    <select id="selectEquipmentMonitorDataOne" resultType="com.kakarote.build.equipment.entity.PO.EquipmentMonitorData">
        select *
        from b_equipment_monitor_data a
        <where>
            point_id = #{pointId}
        </where>

        order by monitor_time desc

        limit 0,1
    </select>

    <select id="selectListByProject" resultType="java.util.Map">
        select p.point_name, p.point_code, p.monitor_type, p.monitor_son_Type, p.equipment_id, p.unit, p.alarm_upper, p.alarm_lower,
        d.value, d.monitor_time, a.asset_name, i.project_name
        from b_equipment_monitor_data d
        left join b_equipment_monitor_point p on d.point_id = p.id
        left join b_equipment_assets a on p.equipment_id = a.asset_id
        left join b_project_info i on d.project_id = i.id
        <where>
            <if test="data.monitorType != null and data.monitorType != ''">
                and p.monitor_type = #{data.monitorType,jdbcType=VARCHAR}
            </if>
            <if test="data.pointName != null and data.pointName != ''">
                and p.point_name like concat('%', #{data.pointName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="data.startTime != null">
                and d.monitor_time >= #{data.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.endTime != null">
                and d.monitor_time &lt;= #{data.endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.projectId != null">
                and d.project_id = #{data.projectId}
            </if>
            <if test='data.envMonitorSonType == "1"'>
                and p.monitor_son_type in ('1', '2')
            </if>
            <if test='data.envMonitorSonType == "2"'>
                and p.monitor_son_type = '3'
            </if>
            <if test='data.envMonitorSonType == "3"'>
                and p.monitor_son_type in ('4', '5', '6', '7', '8')
            </if>
        </where>
       /* order by d.monitor_time desc, p.sort*/
    </select>

    <select id="selectMonitorDataList" resultType="java.util.Map">
        SELECT * FROM(
        SELECT b.point_code, a.id, a.monitor_time, a.value, a.create_time,
        (CASE WHEN (a.value >= b.warn_upper or a.value &lt;= b.warn_lower) THEN '2'
        WHEN (a.value >= b.alarm_upper or a.value &lt;= b.alarm_lower) THEN '3' ELSE '1' END) AS alarmStatus
        FROM b_equipment_monitor_data a
        INNER JOIN b_equipment_monitor_point b on a.point_id = b.id
        <where>
            <if test="data.monitorType != null and data.monitorType != ''">
                AND b.monitor_type = #{data.monitorType}
            </if>
            <if test="data.pointIds != null and data.pointIds.size() > 0">
                AND a.point_id in
                <foreach collection="data.pointIds" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ) c
        <where>
            <if test="data.pointCode != null and data.pointCode != ''">
                AND c.point_code LIKE concat('%', #{data.pointCode,jdbcType=VARCHAR}, '%')
            </if>
            <if test="data.startTime != null">
                AND c.monitor_time >= #{data.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.endTime != null">
                AND c.monitor_time &lt;= #{data.endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.alarmStatus != null and data.alarmStatus != ''">
                AND c.alarmStatus = #{data.alarmStatus}
            </if>
        </where>
        ORDER BY c.monitor_time DESC
    </select>

    <select id="selectMonitorDataByPointId" resultType="java.util.Map">
        SELECT point_id, value, monitor_time FROM b_equipment_pit_data_at_bak a
        WHERE point_id = #{pointId}
        <if test="data.startTime != null">
            AND monitor_time >= #{data.startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="data.startTime != null">
            AND monitor_time &lt;= #{data.endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="data.minValue != null and data.minValue != ''">
            AND value >= #{data.minValue}
        </if>
        <if test="data.maxValue != null and data.maxValue != ''">
            AND value &lt;= #{data.maxValue}
        </if>
        GROUP BY monitor_time
        HAVING monitor_time IS NOT NULL AND monitor_time != ''
    </select>
    <select id="getTowerCraneData" resultType="java.util.Map">
        select  * from (SELECT x.monitor_time,
        SUM(CASE x.point_name WHEN '幅度' THEN x.value ELSE 0 END) as 'fd',
        SUM(CASE x.point_name WHEN '高度' THEN x.value ELSE 0 END) as 'gd',
        SUM(CASE x.point_name WHEN '转角' THEN x.value ELSE 0 END) as 'zj',
        SUM(CASE x.point_name WHEN '吊重' THEN x.value ELSE 0 END) as 'dz',
        SUM(CASE x.point_name WHEN '力矩' THEN x.value ELSE 0 END) as 'lj',
        SUM(CASE x.point_name WHEN '风速' THEN x.value ELSE 0 END) as 'fs',
        SUM(CASE x.point_name WHEN '倾角X' THEN x.value ELSE 0 END) as 'qjx',
        SUM(CASE x.point_name WHEN '倾角Y' THEN x.value ELSE 0 END) as 'qjy'
        FROM (SELECT w.id,w.value,p.point_name,w.monitor_time from (SELECT
        a.id,
        a.value,
        a.point_id,
        a.monitor_time
        FROM
        b_equipment_monitor_data a
        LEFT JOIN b_equipment_monitor_data b ON a.point_id = b.point_id
        AND a.monitor_time &lt; b.monitor_time
        GROUP BY
        a.id,
        a.value,
        a.point_id,
        a.monitor_time
        HAVING
        count( b.id ) &lt; 5)w LEFT JOIN b_equipment_monitor_point p on w.point_id = p.id
        WHERE
        p.equipment_id = #{equipmentId}
        ORDER BY w.monitor_time desc)  x
        GROUP BY x.monitor_time) y
        ORDER BY y.monitor_time desc
    </select>


    <!-- 根据设备 获取行转列数据 -->
    <select id="getMDataByEq" resultType="java.util.LinkedHashMap">
        SELECT
            o.monitor_time as monitorTime
            ${data.pointsSql }
        FROM
            b_equipment_monitor_data o,
            b_equipment_monitor_point p
        WHERE
            p.id = o.point_id
        AND p.equipment_id = #{data.equipmentId }
        <if test="data.startTime != null">
            AND o.monitor_time &gt; #{data.startTime}
        </if>
        <if test="data.endTime != null">
            AND o.monitor_time &lt; #{data.endTime}
        </if>
        GROUP BY
            o.monitor_time
        order by monitor_time desc
    </select>


    <select id="selectListNew" resultType="java.util.Map">
        select p.point_name, p.point_code, p.monitor_type, p.monitor_son_type, p.equipment_id, p.unit, p.alarm_upper, p.alarm_lower,
        d.value, d.monitor_time, a.asset_name, IFNULL(i.project_abbreviation,i.project_name) AS projectName
        from b_equipment_monitor_data d
        left join b_equipment_monitor_point p on d.point_id = p.id
        left join b_equipment_assets a on p.equipment_id = a.asset_id
        left join b_project_info i on d.project_id = i.id
        <where>
            <if test="data.monitorType != null and data.monitorType != ''">
                and p.monitor_type = #{data.monitorType,jdbcType=VARCHAR}
            </if>
            <if test="data.pointName != null and data.pointName != ''">
                and p.point_name like concat('%', #{data.pointName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="data.startTime != null">
                and d.monitor_time >= #{data.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.endTime != null">
                and d.monitor_time &lt;= #{data.endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.projectId != null and data.projectId != ''">
                and d.project_id = #{data.projectId,jdbcType=BIGINT}
            </if>
        </where>
        order by d.monitor_time desc, p.sort
    </select>
</mapper>
