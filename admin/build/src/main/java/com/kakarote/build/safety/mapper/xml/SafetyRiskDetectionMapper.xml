<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kakarote.build.safety.mapper.SafetyRiskDetectionMapper">

    <select id="selectByPage" resultType="com.kakarote.build.safety.entity.PO.SafetyRiskDetection">
        select a.*
        from b_safety_risk_detection a
        where a.is_delete = '0'
        <if test="data.hiddenNum != null and data.hiddenNum != ''">
            and a.hidden_num like concat('%', #{data.hiddenNum}, '%')
        </if>
        <if test="data.category != null and data.category != ''">
            and a.category = #{data.category}
        </if>
        <if test="data.level != null and data.level != ''">
            and a.level = #{data.level}
        </if>
        <if test="data.riskName != null and data.riskName != ''">
            and a.risk_name like concat('%', #{data.riskName}, '%')
        </if>
        <if test="data.infoState != null and data.infoState != ''">
            and a.info_state = #{data.infoState}
        </if>
        <!--order by a.create_time desc-->
    </select>

    <select id="getQueuesUserList" resultType="java.lang.Long">
        select b.user_id
        from b_safety_risk_detection a
        inner join wk_admin_user b on a.rectify_person_phone = b.username
        where a.id = #{id}
    </select>

    <select id="selectQuestionNumber" resultType="java.util.Map">
        select count(1) count,
		    IFNULL(sum(case when
				(a.rectify_complete_time = '' or a.rectify_complete_time is null)
				and DATE_SUB(CURDATE(), INTERVAL 0 DAY) > a.rectify_time then 1 else 0 end), 0) timeoutNumber,
		    IFNULL(sum(case when
				(a.rectify_complete_time = '' or a.rectify_complete_time is null)
				and DATE_SUB(CURDATE(), INTERVAL 0 DAY) &lt;= a.rectify_time then 1 else 0 end), 0) underwayNumber,
            IFNULL(sum(case when
                (a.rectify_complete_time != '' and a.rectify_complete_time is not null) then 1 else 0 end), 0) completeNumber
        from b_safety_risk_detection a
        where a.is_delete = '0' and a.info_state != '0'
    </select>

    <select id="selectSafetyHiddenDanger" resultType="java.util.Map">
        select a.risk_name as name,
		    count(b.id) as count,
		    sum(case when (b.id is not null) and
			    (b.rectify_complete_time = '' or b.rectify_complete_time is null) then 1 else 0 end) unfinished
        from b_safety_risk a
        left join b_safety_risk_detection b on a.id = b.risk_id and a.risk_data_type = b.risk_type
            and b.is_delete = '0' and b.info_state != '0' and b.info_state != '4'
        where a.project_id = #{data.projectId}
        group by a.risk_name
        order by count desc, unfinished desc
        limit 7
    </select>

    <select id="selectSafetyLevelAnalysis" resultType="java.util.Map">
        select a.dict_label, sum(case when b.id is not null then 1 else 0 end) as number
        from (select dict_label, dict_value from wk_admin_dict_data where dict_type = 'b_hazard_level') a
        left join (select id, level from b_safety_risk_detection
            where is_delete = '0' and info_state != '0') b on a.dict_value = b.level
        group by a.dict_value
    </select>

    <select id="selectNumByType" resultType="java.util.Map">
        select a.curr_date clickDate, IFNULL(b.value ,0) value
        from (
            select date_format(date_add(curdate(),interval -t.help_topic_id ${data.dateType}),#{data.format}) as 'curr_date'
            from mysql.help_topic t
            where t.help_topic_id &lt; #{data.num}) a
        left join (
            select count(1) value , DATE_FORMAT(d.rectify_complete_time, #{data.format}) changeDate
            from b_safety_risk_detection d
            where d.is_delete = '0' and d.info_state != '0' and d.info_state != '4'
            group by changeDate) b on a.curr_date = b.changeDate
        order by clickDate
    </select>

    <select id="selectSafetyDataByPrinipal" resultType="java.util.Map">
        select b.name, count(1) count,
	        IFNULL(sum(case when a.rectify_complete_time = '' or a.rectify_complete_time is null then 1 else 0 end) ,0) as unfinished
        from b_safety_risk_detection a
        inner join b_labour_infocollection b on a.rectify_person_id = b.id
        where a.is_delete = '0' and a.info_state != '0' and a.info_state != '4'
        group by a.rectify_person_id
    </select>

    <select id="selectPieData" resultType="java.util.Map">
        select a.risk_name as name,
		    count(1) as value
        from b_safety_risk a
        inner join b_safety_risk_detection b on a.id = b.risk_id and a.risk_data_type = b.risk_type
        where b.is_delete = '0' and b.info_state != '0' and b.info_state != '4'
        group by a.risk_name
        order by value desc
        limit 10
    </select>

    <select id="selectSafetyQuestionsQuantity" resultType="java.util.Map">
        select count(d.id) count,
            IFNULL(sum(case when d.rectify_complete_time = '' or d.rectify_complete_time is null then 1 else 0 end), 0) unfinished
        from b_safety_risk_detection d
        where d.is_delete = '0' and d.info_state != '0' and d.info_state != '4'
    </select>

    <select id="selectBarData" resultType="java.util.Map">
        select b.dict_label as name, count(1) value
        from b_safety_risk_detection a
        inner join (select dict_label, dict_value from wk_admin_dict_data
            where dict_type = 'b_hidden_accident_type') b on a.accident_type = b.dict_value
        where a.is_delete = '0' and a.info_state != '0'
        group by a.accident_type
    </select>

    <select id="selectCurveData" resultType="java.util.Map">
        select a.curr_date clickDate, IFNULL(b.ordinaryValue, 0) as ordinaryValue, IFNULL(b.greatValue, 0) as greatValue
        from (
            select date_format(date_add(curdate(),interval -t.help_topic_id day), '%Y-%m-%d') as 'curr_date'
            from mysql.help_topic t
            where t.help_topic_id &lt;= 29) a
        left join (
            select DATE_FORMAT(check_time, '%Y-%m-%d') as changeDate,
            sum(case when level = 'general' then 1 else 0 end) as ordinaryValue,
            sum(case when level = 'serious' then 1 else 0 end) as greatValue
            from b_safety_risk_detection
            where is_delete = '0' and info_state != '0'
            group by changeDate) b on a.curr_date = b.changeDate
        order by clickDate
    </select>

    <select id="selectTimeoutList" resultType="com.kakarote.build.safety.entity.PO.SafetyRiskDetection">
        select a.*
        from b_safety_risk_detection a
        where a.is_delete = '0' and a.info_state = '1'
        and DATE_SUB(CURDATE(), INTERVAL 0 DAY) > a.rectify_time
        <if test="data.hiddenNum != null and data.hiddenNum != ''">
            and a.hidden_num like concat('%', #{data.hiddenNum}, '%')
        </if>
        <if test="data.category != null and data.category != ''">
            and a.category = #{data.category}
        </if>
        <if test="data.level != null and data.level != ''">
            and a.level = #{data.level}
        </if>
        <if test="data.riskName != null and data.riskName != ''">
            and a.risk_name like concat('%', #{data.riskName}, '%')
        </if>
        <!--order by a.create_time desc-->
    </select>

    <select id="selectQuestionList" resultType="java.util.Map">
        select a.*
        from b_safety_risk_detection a
        <where>
            1=1
            <if test="data.type!='' and data.type!=null and data.type=='1'.toString()">
                and (a.rectify_complete_time = '' or a.rectify_complete_time is null) and DATE_SUB(CURDATE(), INTERVAL 0 DAY) > a.rectify_time
            </if>
            <if test="data.type!='' and data.type!=null and data.type=='2'.toString()">
                and (a.rectify_complete_time = '' or a.rectify_complete_time is null) and DATE_SUB(CURDATE(), INTERVAL 0 DAY) &lt;= a.rectify_time
            </if>
            <if test="data.type!='' and data.type!=null and data.type=='3'.toString()">
                and (a.rectify_complete_time != '' and a.rectify_complete_time is not null)
            </if>
        </where>
    </select>

    <select id="selectListByPro" resultType="com.kakarote.build.safety.entity.PO.SafetyRiskDetection">
        select a.*, IFNULL(b.project_abbreviation,b.project_name) AS projectName
        from b_safety_risk_detection a
        left join b_project_info b on a.project_id = b.id
        where a.is_delete = '0'
        <if test="data.hiddenNum != null and data.hiddenNum != ''">
            and a.hidden_num like concat('%', #{data.hiddenNum}, '%')
        </if>
        <if test="data.category != null and data.category != ''">
            and a.category = #{data.category}
        </if>
        <if test="data.level != null and data.level != ''">
            and a.level = #{data.level}
        </if>
        <if test="data.riskName != null and data.riskName != ''">
            and a.risk_name like concat('%', #{data.riskName}, '%')
        </if>
        <if test="data.infoState != null and data.infoState != ''">
            and a.info_state = #{data.infoState}
        </if>
        <if test="data.projectId != null and data.projectId != ''">
            and a.project_id = #{data.projectId}
        </if>
        /*order by a.create_time desc*/
    </select>

    <select id="selectProDangerNumber" resultType="java.util.Map">
        select count(*) as count,
            IFNULL(sum(case when a.rectify_complete_time is not null or a.rectify_complete_time = !'' then 1 else 0 end),0) as completeNumber,
            IFNULL(sum(case when a.rectify_complete_time is null or a.rectify_complete_time = '' then 1 else 0 end),0) as unfinishNumber
        from b_safety_risk_detection	a
    </select>

    <select id="selectAvgRectifyTime" resultType="java.util.Map">
        select ifnull(cast( avg(timestampdiff(day,a.check_time,a.rectify_complete_time)) as DECIMAL(10, 2)), 0) as avgTime
        from b_safety_risk_detection a
        where a.rectify_complete_time is not null and a.rectify_complete_time != ''
    </select>

    <select id="selectQuantityCompletion" resultType="java.util.Map">
        select count(1) quantityCompletion
        from b_safety_risk_detection a
        where a.review_time is not null and a.review_time != ''
    </select>

    <select id="selectDangerNumberProportion" resultType="java.util.Map">
        select c.curr_date as checkDate, DATE_FORMAT(c.curr_date,'%d日') as formatDate,
            IFNULL(d.notRectify,0) as notRectify, IFNULL(d.notRecheck,0) as notRecheck, IFNULL(d.complete,0) as complete
        from (
            select DATE_FORMAT(date_add(curdate(),interval -t.help_topic_id day),"%Y-%m-%d") as 'curr_date'
            from mysql.help_topic t  where t.help_topic_id &lt; 7
        ) c
        left join (
            select sum(case when a.rectify_complete_time is null or a.rectify_complete_time = '' then 1 else 0 end) notRectify,
            sum(case when (a.review_time is null or a.review_time = '') then 1 else 0 end) notRecheck,
            sum(case when a.review_time is not null and a.review_time != '' then 1 else 0 end) complete,
            DATE_FORMAT(a.check_time,'%Y-%m-%d') as check_date
            from b_safety_risk_detection a
            group by DATE_FORMAT(a.check_time,'%Y-%m-%d')
        ) d on c.curr_date = d.check_date
        order by checkDate
    </select>

    <select id="selectTrendAnalyses" resultType="java.util.Map">
        select c.curr_date as checkDate, IFNULL(d.number ,0) as number, c.formatDate
        from (
            select DATE_FORMAT(date_add(curdate(),interval -t.help_topic_id ${data.dateType}),#{data.format}) as 'curr_date',
            DATE_FORMAT(date_add(curdate(),interval -t.help_topic_id ${data.dateType}),#{data.formatStyle}) as 'formatDate'
            from mysql.help_topic t  where t.help_topic_id &lt; #{data.num}
        ) c
        left join (
            select DATE_FORMAT(a.check_time,#{data.format}) as date, count(*) as number
            from b_safety_risk_detection a
            group by DATE_FORMAT(a.check_time,#{data.format})
        ) d on c.curr_date = d.date
        order by c.curr_date
    </select>

    <select id="selectProDangerLevelProportion" resultType="java.util.Map">
        select sum(case when a.level = 'general' then 1 else 0 end) as generalNumber,
            sum(case when a.level = 'serious' then 1 else 0 end) as seriouslNumber
        from b_safety_risk_detection a
    </select>

    <select id="selectProDangerTypeProportion" resultType="java.util.Map">
        select sum(case when a.category = 'basic' then 1 else 0 end) as basiclNumber,
               sum(case when a.category = 'production' then 1 else 0 end) as productionlNumber
        from b_safety_risk_detection a
    </select>

    <select id="selectProDangerRank" resultType="java.util.Map">
        select IFNULL(a.project_abbreviation,a.project_name) AS projectName,  sum(case when b.id and b.rectify_complete_time is null or b.rectify_complete_time = '' then 1 else 0 end) as notRectifyCount,
               sum(case when date_format(b.check_time , '%Y-%m-%d') = date_format(now(), '%Y-%m-%d') then 1 else 0 end) as todayCount, count(b.id) as total
        from b_project_info a
        left join b_safety_risk_detection b on a.id = b.project_id
        group by a.id
        order by notRectifyCount desc, todayCount desc, total desc
    </select>

    <select id="selectProAgingAnalysis" resultType="java.util.Map">
        SELECT a.id, IFNULL(a.project_abbreviation, a.project_name) AS projectName,
            sum(CASE WHEN b.rectify_complete_time IS NOT NULL AND b.rectify_complete_time != '' THEN 1 ELSE 0 END) completeCount,
            count(b.id) total,
            IFNULL(CAST(avg(timestampdiff(day, b.check_time, b.rectify_complete_time))AS DECIMAL (10, 2)),0) as avgTime
        FROM b_project_info a
        LEFT JOIN b_safety_risk_detection b ON a.id = b.project_id
        GROUP BY a.id order by total desc,completeCount desc,avgTime desc
    </select>
</mapper>
