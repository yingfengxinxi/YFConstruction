<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kakarote.build.eval.mapper.EvalItemsMapper">

    <select id="selectByPage" resultType="com.kakarote.build.eval.entity.PO.EvalItems">
        select a.*
        from b_eval_items a
        where a.status != '-1'
        <if test="data.classType != null and data.classType != ''">
            and a.class_type = #{data.classType}
        </if>
        <if test="data.itemType != null and data.itemType != ''">
            and a.item_type = #{data.itemType}
        </if>
        <if test="data.itemName != null and data.itemName != ''">
            and a.item_name like concat('%', #{data.itemName,jdbcType=VARCHAR}, '%')
        </if>
--         order by a.sort
    </select>

    <select id="selectItemList" resultType="java.util.Map">
        select a.*, dict1.dict_label AS classTypeName, sum(a.max_data) as maxTotal, sum(a.min_data) as minTotal
        from b_eval_items a
        LEFT JOIN (SELECT dict_label, dict_value FROM wk_admin_dict_data
            WHERE dict_type = 'b_eval_class_type') dict1 ON a.class_type = dict1.dict_value
        WHERE a.status = '1'  AND  (a.project_id = a.project_id or a.project_id is null)
        group by a.item_name
        order by a.sort
    </select>

    <select id="selectListByClassType" resultType="com.kakarote.build.eval.entity.PO.EvalItems">
        select a.*
        from b_eval_items a
        where a.status != '-1' AND a.status != '0'  AND  (a.project_id = a.project_id or a.project_id is null)
        and a.class_type in
        <foreach collection="data" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="selectListByItemName" resultType="com.kakarote.build.eval.entity.PO.EvalItems">
        select a.*
        from b_eval_items a
        where a.status != '-1' AND a.status != '0'  AND  (a.project_id = a.project_id or a.project_id is null)
        and a.item_name in
        <foreach collection="data" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
</mapper>
