<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kakarote.build.equipment.mapper.EquipmentTowerEffectMapper">
    <select id="selectDZTJ" resultType="java.util.Map">
        SELECT
        a.val AS date,
        IF
        ( w.count IS NULL, 0, w.count ) AS val
        FROM
        util_hour a
        LEFT JOIN (
        SELECT HOUR
        ( e.monitor_time ) AS HOUR,
        ROUND(AVG( weight ),2) AS count
        FROM
        b_equipment_tower_data_at e
        WHERE e.weight > 0 and
        to_days( e.monitor_time ) = to_days( now( ) ) and equipment_id = #{id}
        GROUP BY
        HOUR ( e.monitor_time )
        ) w ON a.val = w.HOUR
        WHERE
        a.val &lt;= HOUR ( now( ) )
        	ORDER BY date
    </select>
    <select id="selectLJTJ"  resultType="java.util.Map">
        SELECT
        a.val AS date,
        IF
        ( w.count IS NULL, 0, w.count ) AS val
        FROM
        util_hour a
        LEFT JOIN (
        SELECT HOUR
        ( e.monitor_time ) AS HOUR,
        ROUND(AVG(weight*amplitude),2) AS count
        FROM
        b_equipment_tower_data_at e
        WHERE e.weight > 0 and
        to_days( e.monitor_time ) = to_days( now( ) ) and equipment_id = #{id}
        GROUP BY
        HOUR ( e.monitor_time )
        ) w ON a.val = w.HOUR
        WHERE
        a.val &lt;= HOUR ( now( ) )
        ORDER BY a.val
    </select>
    <select id="selectJRGX" resultType="java.util.Map" >
        SELECT
            ${query} as ${type}
        FROM
            b_equipment_tower_effect
        WHERE
            to_days(create_time) = to_days(now()) and asset_id = #{id}
    </select>
    <select id="selectJRBJS"  resultType="java.util.Map" >
        SELECT
            COUNT(0) as bjs
        FROM
            b_monitor_point_alert
        WHERE
            to_days(create_time) = to_days(now()) and alert_type = 1  and equipment_id = #{id}
    </select>
    <select id="selectSJXX"  resultType="java.util.Map">
        SELECT
            b.* ,DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS(b.birthday)), '%Y')+0 AS csrq,c.cer_name,d.dict_label,c.cer_useend_date
            FROM b_equipment_driver_ident a
            LEFT JOIN b_labour_infocollection b ON a.id_card = b.id_card
            AND b.id IN ( SELECT max( id ) FROM b_labour_infocollection GROUP BY id_card )
            LEFT JOIN b_labour_speworktype c on b.id = c.infocol_id
            LEFT JOIN wk_admin_dict_data d on d.dict_type = 'b_cerCategoryType' and c.cer_category_type = d.dict_value
        where a.equ_code = #{code}
        ORDER BY starting_date desc LIMIT 1
    </select>
    <insert id="batchSaveData">
        insert into b_equipment_tower_effect
        ( project_id,asset_id, tenant_id,
        start_time,end_time,max_moment_early_alarm,end_early_alarm,start_early_alarm,
        max_moment_alarm,end_alarm,start_alarm,start_peccancy,end_peccancy,
        max_moment_peccancy,max_radius,start_angle,max_percent,max_height,
        end_angle,min_radius,max_load,max_wind_speed,min_height,create_time,weight,
        lifting_point_radius, lifting_point_height, lifting_point_radius_unload, lifting_point_height_unload
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.projectId}, #{item.assetId}, #{item.tenantId},
            #{item.startTime},#{item.endTime},#{item.maxMomentEarlyAlarm},#{item.endEarlyAlarm},#{item.startEarlyAlarm},
            #{item.maxMomentAlarm},#{item.endAlarm},#{item.startAlarm},#{item.startPeccancy},#{item.endPeccancy},
            #{item.maxMomentPeccancy},#{item.maxRadius},#{item.startAngle},#{item.maxPercent},#{item.maxHeight},
            #{item.endAngle},#{item.minRadius},#{item.maxLoad},#{item.maxWindSpeed},#{item.minHeight},#{item.createTime},#{item.weight},
            #{item.liftingPointRadius},#{item.liftingPointHeight},#{item.liftingPointRadiusUnload},#{item.liftingPointHeightUnload}
            )
        </foreach>
    </insert>

    <select id="selectOnline" resultType="java.util.Map">
        select (case when a.line = '1' then '在线' else '离线' end ) as onLine
        from equipment_line a
        where a.equipment_id = #{equipmentId}
    </select>
    <select id="selectPage" resultType="java.util.Map">
        SELECT
            a.asset_id,
            b.asset_name,
            b.asset_code,
            a.start_time,
            a.end_time,
            a.weight,
            a.max_radius,
            a.start_angle,
            a.max_percent,
            a.max_height,
            a.end_angle,
            a.min_radius,
            a.max_load,
            a.max_wind_speed,
            a.min_height,
            a.lifting_point_radius,
            a.lifting_point_height,
            a.lifting_point_radius_unload,
            a.lifting_point_height_unload,
            IFNULL(c.project_abbreviation,c.project_name) AS projectName
        FROM
            b_equipment_tower_effect a
            LEFT JOIN b_equipment_assets b ON a.asset_id = b.asset_id
            LEFT JOIN b_project_info c ON b.project_id = c.id
        <where>
            <if test="data.assetName!=null and data.assetName != ''">
                and b.asset_name like concat('%', #{data.assetName}, '%')
            </if>
            <if test="data.assetCode!=null and data.assetCode != ''">
                and b.asset_code like concat('%', #{data.assetCode}, '%')
            </if>
            <if test="data.startTime != null">
                and a.start_time  >=  #{data.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.endTime != null">
                and a.end_time &lt;=  #{data.endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="data.assetId!=null and data.assetId != ''">
                and a.asset_id = #{data.assetId}
            </if>
            <if test="data.projectId!=null and data.projectId != ''">
                and a.project_id = #{data.projectId}
            </if>
            <if test="data.projectName!=null and data.projectName != ''">
                and c.project_name like concat('%', #{data.projectName}, '%')
            </if>
        </where>
--         ORDER BY a.create_time
    </select>
</mapper>
